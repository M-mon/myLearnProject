单例模式有 3 个特点：
    **单例类只有一个实例对象；
    **该单例对象必须由单例类自行创建；
    **单例类对外提供一个访问该单例的全局访问点；


Singleton 模式通常有两种实现形式。
第 1 种：懒汉式单例
该模式的特点是类加载时没有生成单例，只有当第一次调用 getlnstance 方法时才去创建这个单例。
第 2 种：饿汉式单例
该模式的特点是类一旦加载就创建一个单例，保证在调用 getInstance 方法之前单例已经存在了。



例子：SingletonLazy.java
用懒汉式单例模式模拟产生美国当今总统对象。
分析：在每一届任期内，美国的总统只有一人，所以本实例适合用单例模式实现。



例子：SingletonEager.java
用饿汉式单例模式模拟产生猪八戒对象。
分析：同上例类似，猪八戒也只有一个，所以本实例同样适合用单例模式实现。
本实例由于要显示猪八戒的图像，所以用到了框架窗体 JFrame 组件，这里的猪八戒类是单例类，可以将其定义成面板 JPanel 的子类，里面包含了标签，用于保存猪八戒的图像，客户窗体可以获得猪八戒对象，并显示它。


通常适用的场景的特点。
    **在应用场景中，某类只要求生成一个对象的时候，如一个班中的班长、每个人的身份证号等。
    **当对象需要被共享的场合。由于单例模式只允许创建一个对象，共享该对象可以节省内存，并加快对象访问速度。如 Web 中的配置对象、数据库的连接池等。
    **当某类需要频繁实例化，而创建的对象又频繁被销毁的时候，如多线程的线程池、网络连接池等。

单例模式的扩展
单例模式可扩展为有限的多例（Multitcm）模式，这种模式可生成有限个实例并保存在 ArmyList 中，客户需要时可随机获取。
即一次性创建多个实例后，不再新建实例，这些实例都以列表保存。