-- 题目：178.分数排名
-- 难度：中等
--
-- 编写一个 SQL 查询来实现分数排名。如果两个分数相同，则两个分数排名（Rank）相同。请注意，平分后的下一个名次应该是下一个连续的整数值。换句话说，名次之间不应该有“间隔”。
--
-- +----+-------+
-- | Id | Score |
-- +----+-------+
-- | 1  | 3.50  |
-- | 2  | 3.65  |
-- | 3  | 4.00  |
-- | 4  | 3.85  |
-- | 5  | 4.00  |
-- | 6  | 3.65  |
-- +----+-------+
-- 例如，根据上述给定的 Scores 表，你的查询应该返回（按分数从高到低排列）：
--
-- +-------+------+
-- | Score | Rank |
-- +-------+------+
-- | 4.00  | 1    |
-- | 4.00  | 1    |
-- | 3.85  | 2    |
-- | 3.65  | 3    |
-- | 3.65  | 3    |
-- | 3.50  | 4    |
-- +-------+------+

Create table If Not Exists Scores (Id int, Score DECIMAL(3,2))
Truncate table Scores
insert into Scores (Id, Score) values ('1', '3.5')
insert into Scores (Id, Score) values ('2', '3.65')
insert into Scores (Id, Score) values ('3', '4.0')
insert into Scores (Id, Score) values ('4', '3.85')
insert into Scores (Id, Score) values ('5', '4.0')
insert into Scores (Id, Score) values ('6', '3.65')

--my
select sc.Score as Score, rs.rank as rank
from
    (select @rank := @rank+1 as rank,Score
     from
        (select @rank := 0)
     as r,
        (select distinct Score
            from Scores ORDER BY Score DESC )
     as s)
as  rs,
    (select Score
        from Scores ORDER BY Score DESC )
as sc
where sc.Score=rs.Score

--other 最精简
select score, @a := @a + (@pre <> (@pre := Score)) as rank
from scores,(select @a := 0, @pre := -1) t
order by score desc;

--other
select  Score,
((case
--与上一个数相同
when @prevRank = Score then @curRank
--与上一个数不相同 ，变量更变为当前数 ，排名+1
when @prevRank := Score then @curRank:=@curRank +1
else @curRank:=@curRank +1
--*1 转换成数字
end )*1) as Rank
FROM Scores,(select @curRank:=0,@prevRank:=NULL) p
ORDER BY Score desc

--考核点：手动排序方式